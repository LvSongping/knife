0. 23299 com.alipay.cloudengine.launcher.CELauncher -config /opt/taobao/cloudengine/server/profile.core.properties -Fcom.alipay.cloudengine.kernel.home=/opt/taobao/cloudengine -Fcom.alipay.cloudengine.kernel.config=/opt/taobao/cloudengine/config -F/opt/taobao/cloudengine/bin/startup.sh -F/home/admin/ebppcore-run/work -F -F -F -Fcloudengine.deploy.dir=/home/admin/ebppcore-run/deploy -Fcloudengine.work.dir=/home/admin/ebppcore-run/work -Forg.eclipse.gemini.web.tomcat.config.path=/opt/taobao/cloudengine/config/tomcat-config-server.xml -Fosgi.configuration.area=/home/admin/ebppcore-run/work/osgi/configuration
input [0-0] to choose vm! 
connected!

-------------------------------------------------------
  usage: <command> [-h] [<args>]

  The most commonly used commands are:

   ls                            列出目标类或目标对象的属性、方法、构造函数等信息。
   set                           更改目标对象的某个属性值。
   trace                         等待某个目标类或对象上的外部方法调用，并打印出调用信息。
   prop                          一些全局设置信息。
   gc                            强制jvm进行fullgc。
   log                           not support yet。
   spring                        使用指定的spring配置文件创建一个application-context，并加载到容器中。
   close                         关闭agent并断开连接。
   clear                         清除所有字节码增强和agent保存的对象引用，把agent回复到刚连接上时的状态。
   ref                           查找所有目标对象引用到的对象，或者引用到目标对象的对象。
   cmd                           更新客户端暂存的服务端命令列表。
   new                           调用构造函数创建一个对象。
   decode                        根据输入字符串解码成一个新的字符串，用于输入系统不支持的编码，如中文等。
   invoke                        调用某个类的静态方法，或者目标对象的某个实例方法。
   do                            do some test。
   view                          查看类加载器和类文件名。
   find                          从堆内存中查找某个类的实例。
   cd                            把指定id的对象当作当前对象。
   top                           查找最占cpu的线程。或者查找存在引用数最多的对象。按从多到少排序。
-------------------------------------------------------


-------------------------------------------------------
  usage: trace [-f <filter-expression>] [-n <trace-num>]  [-c] [-t] <trace-expression>

  等待某个目标类或对象上的外部方法调用，并打印出调用信息。

   trace-expression              输入 'package.ClassName.method' 表示静态方法, 输入 'method' 表示目标对象的实例方法。
   -f <filter-expression>        设置 <filter-expression> 表达式，可以过滤掉不需要输出的调用细节。
   -n <trace-num>                <trace-num>用于设置等待调用的次数。
   -c                            计算方法调用的次数
   -t                            是否需要跟踪调用的内部细节。
-------------------------------------------------------

